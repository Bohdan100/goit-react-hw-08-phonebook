{"version":3,"file":"static/js/349.595cda5c.chunk.js","mappings":"4PAEaA,EAAaC,EAAAA,GAAAA,GAAH,8HAGR,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,UAAUC,CAA1B,IACH,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,YAAYC,IAA5B,IACL,SAAAL,GAAK,OAAIA,EAAMC,MAAMK,YAAYC,IAA5B,IACX,SAAAC,GAAC,OAAIA,EAAEP,MAAMQ,OAAOC,KAAnB,IAGCC,EAAYZ,EAAAA,GAAAA,EAAH,8HAGP,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,UAAUU,EAA1B,IACH,SAAAZ,GAAK,OAAIA,EAAMC,MAAMG,YAAYS,OAA5B,IACL,SAAAb,GAAK,OAAIA,EAAMC,MAAMK,YAAYQ,MAA5B,IACX,SAAAN,GAAC,OAAIA,EAAEP,MAAMQ,OAAOC,KAAnB,IAGCK,EAAYhB,EAAAA,GAAAA,KAAH,sFAMTiB,EAAajB,EAAAA,GAAAA,MAAH,+FAOVkB,EAAclB,EAAAA,GAAAA,OAAH,wkBAKX,SAAAS,GAAC,OAAIA,EAAEP,MAAMiB,MAAM,EAAlB,IACK,SAAAV,GAAC,OAAIA,EAAEP,MAAMkB,MAAMC,MAAlB,IACE,SAAAZ,GAAC,OAAIA,EAAEP,MAAMQ,OAAOY,SAAnB,IAIZ,SAAAb,GAAC,OAAIA,EAAEP,MAAMQ,OAAOa,KAAnB,IACA,SAAAd,GAAC,OAAIA,EAAEP,MAAMsB,QAAQC,IAApB,IAGE,SAAAhB,GAAC,OAAIA,EAAEP,MAAMC,UAAUuB,CAAtB,IACC,SAAAjB,GAAC,OAAIA,EAAEP,MAAMC,UAAUwB,CAAtB,IACD,SAAAlB,GAAC,OAAIA,EAAEP,MAAMK,YAAYqB,MAAxB,IAOM,SAAAnB,GAAC,OAAIA,EAAEP,MAAMQ,OAAOmB,MAAnB,I,UCUzB,EAvDkB,WAChB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,OAEL,EASD,OACE,4BACE,SAACzC,EAAD,6CACA,SAACa,EAAD,sDAEA,UAACI,EAAD,CAAWyB,SAZM,SAAAC,GACnBA,EAAEC,iBACFb,EAASc,EAAAA,GAAAA,MAAqB,CAAEX,MAAAA,EAAOE,SAAAA,KACvCD,EAAS,IACTE,EAAY,GACb,EAOsCS,aAAa,MAAhD,WACE,UAAC5B,EAAD,qBAEE,kBACE6B,KAAK,QACLP,KAAK,QACLC,MAAOP,EACPc,SAAUV,QAId,UAACpB,EAAD,uBAEE,kBACE6B,KAAK,WACLP,KAAK,WACLC,MAAOL,EACPY,SAAUV,QAId,SAACnB,EAAD,CAAa4B,KAAK,SAAlB,2BAIP,C","sources":["pages/LoginView/LoginView.styled.jsx","pages/LoginView/LoginView.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoginTitle = styled.h1`\n  margin-bottom: 30px;\n\n  font-size: ${props => props.theme.fontSizes.l};\n  line-height: ${props => props.theme.lineHeights.body};\n  font-weight: ${props => props.theme.fontWeights.bold};\n  color: ${p => p.theme.colors.black};\n`;\n\nexport const LoginText = styled.p`\n  margin-bottom: 30px;\n\n  font-size: ${props => props.theme.fontSizes.xs};\n  line-height: ${props => props.theme.lineHeights.heading};\n  font-weight: ${props => props.theme.fontWeights.normal};\n  color: ${p => p.theme.colors.black};\n`;\n\nexport const LoginForm = styled.form`\n  width: 320px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const LoginLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  margin-bottom: 15px;\n`;\n\nexport const LoginButton = styled.button`\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n\n  padding: ${p => p.theme.space[4]}px;\n  border-radius: ${p => p.theme.radii.border};\n  background-color: ${p => p.theme.colors.blueFirst};\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  display: block;\n  color: ${p => p.theme.colors.white};\n  border: ${p => p.theme.borders.none};\n  text-decoration: none;\n  cursor: pointer;\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.middle};\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.indigo};\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/authorization';\n\nimport {\n  LoginTitle,\n  LoginText,\n  LoginForm,\n  LoginLabel,\n  LoginButton,\n} from './LoginView.styled';\n\nconst LoginView = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <LoginTitle>Please log in to your account</LoginTitle>\n      <LoginText>Enter your e-mail address and password</LoginText>\n\n      <LoginForm onSubmit={handleSubmit} autoComplete=\"off\">\n        <LoginLabel>\n          E-mail\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </LoginLabel>\n\n        <LoginLabel>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </LoginLabel>\n\n        <LoginButton type=\"submit\">Continue</LoginButton>\n      </LoginForm>\n    </div>\n  );\n};\n\nexport default LoginView;\n"],"names":["LoginTitle","styled","props","theme","fontSizes","l","lineHeights","body","fontWeights","bold","p","colors","black","LoginText","xs","heading","normal","LoginForm","LoginLabel","LoginButton","space","radii","border","blueFirst","white","borders","none","s","m","middle","indigo","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","onSubmit","e","preventDefault","authOperations","autoComplete","type","onChange"],"sourceRoot":""}