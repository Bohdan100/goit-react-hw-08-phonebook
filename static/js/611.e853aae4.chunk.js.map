{"version":3,"file":"static/js/611.e853aae4.chunk.js","mappings":"4PAEaA,EAAgBC,EAAAA,GAAAA,GAAH,8HAGX,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,UAAUC,CAA1B,IACH,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,YAAYC,IAA5B,IACL,SAAAL,GAAK,OAAIA,EAAMC,MAAMK,YAAYC,IAA5B,IACX,SAAAC,GAAC,OAAIA,EAAEP,MAAMQ,OAAOC,KAAnB,IAGCC,EAAeZ,EAAAA,GAAAA,EAAH,8HAGV,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,UAAUU,EAA1B,IACH,SAAAZ,GAAK,OAAIA,EAAMC,MAAMG,YAAYS,OAA5B,IACL,SAAAb,GAAK,OAAIA,EAAMC,MAAMK,YAAYQ,MAA5B,IACX,SAAAN,GAAC,OAAIA,EAAEP,MAAMQ,OAAOC,KAAnB,IAGCK,EAAehB,EAAAA,GAAAA,KAAH,sFAMZiB,EAAgBjB,EAAAA,GAAAA,MAAH,6GAQbkB,EAAiBlB,EAAAA,GAAAA,OAAH,wkBAKd,SAAAS,GAAC,OAAIA,EAAEP,MAAMiB,MAAM,EAAlB,IACK,SAAAV,GAAC,OAAIA,EAAEP,MAAMkB,MAAMC,MAAlB,IACE,SAAAZ,GAAC,OAAIA,EAAEP,MAAMQ,OAAOY,SAAnB,IAIZ,SAAAb,GAAC,OAAIA,EAAEP,MAAMQ,OAAOa,KAAnB,IACA,SAAAd,GAAC,OAAIA,EAAEP,MAAMsB,QAAQC,IAApB,IAGE,SAAAhB,GAAC,OAAIA,EAAEP,MAAMC,UAAUuB,CAAtB,IACC,SAAAjB,GAAC,OAAIA,EAAEP,MAAMC,UAAUwB,CAAtB,IACD,SAAAlB,GAAC,OAAIA,EAAEP,MAAMK,YAAYqB,MAAxB,IAOM,SAAAnB,GAAC,OAAIA,EAAEP,MAAMQ,OAAOmB,MAAnB,I,UCkBzB,EAjEqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,OAEL,EAUD,OACE,4BACE,SAAC1C,EAAD,mCAEA,SAACa,EAAD,iDAEA,UAACI,EAAD,CAAc0B,SAdG,SAAAC,GACnBA,EAAEC,iBACFd,EAASe,EAAAA,GAAAA,SAAwB,CAAEZ,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAQyCQ,aAAa,MAAnD,WACE,UAAC7B,EAAD,mBAEE,kBAAO8B,KAAK,OAAOd,KAAK,OAAOQ,MAAOR,EAAMe,SAAUT,QAGxD,UAACtB,EAAD,qBAEE,kBACE8B,KAAK,QACLd,KAAK,QACLQ,MAAON,EACPa,SAAUT,QAId,UAACtB,EAAD,uBAEE,kBACE8B,KAAK,WACLd,KAAK,WACLQ,MAAOJ,EACPW,SAAUT,QAId,SAACrB,EAAD,CAAgB6B,KAAK,SAArB,0BAIP,C","sources":["pages/RegisterView/RegisterView.styled.jsx","pages/RegisterView/RegisterView.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RegisterTitle = styled.h1`\n  margin-bottom: 30px;\n\n  font-size: ${props => props.theme.fontSizes.l};\n  line-height: ${props => props.theme.lineHeights.body};\n  font-weight: ${props => props.theme.fontWeights.bold};\n  color: ${p => p.theme.colors.black};\n`;\n\nexport const RegisterText = styled.p`\n  margin-bottom: 30px;\n\n  font-size: ${props => props.theme.fontSizes.xs};\n  line-height: ${props => props.theme.lineHeights.heading};\n  font-weight: ${props => props.theme.fontWeights.normal};\n  color: ${p => p.theme.colors.black};\n`;\n\nexport const RegisterForm = styled.form`\n  width: 320px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const RegisterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  margin-bottom: 15px;\n`;\n\nexport const RegisterButton = styled.button`\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n\n  padding: ${p => p.theme.space[4]}px;\n  border-radius: ${p => p.theme.radii.border};\n  background-color: ${p => p.theme.colors.blueFirst};\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  display: block;\n  color: ${p => p.theme.colors.white};\n  border: ${p => p.theme.borders.none};\n  text-decoration: none;\n  cursor: pointer;\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.middle};\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.indigo};\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/authorization';\nimport {\n  RegisterTitle,\n  RegisterText,\n  RegisterForm,\n  RegisterLabel,\n  RegisterButton,\n} from './RegisterView.styled';\n\nconst RegisterView = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <RegisterTitle>Create your account</RegisterTitle>\n\n      <RegisterText>Create a name, email and password</RegisterText>\n\n      <RegisterForm onSubmit={handleSubmit} autoComplete=\"off\">\n        <RegisterLabel>\n          Name\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </RegisterLabel>\n\n        <RegisterLabel>\n          E-mail\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </RegisterLabel>\n\n        <RegisterLabel>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </RegisterLabel>\n\n        <RegisterButton type=\"submit\">Sign up</RegisterButton>\n      </RegisterForm>\n    </div>\n  );\n};\n\nexport default RegisterView;\n"],"names":["RegisterTitle","styled","props","theme","fontSizes","l","lineHeights","body","fontWeights","bold","p","colors","black","RegisterText","xs","heading","normal","RegisterForm","RegisterLabel","RegisterButton","space","radii","border","blueFirst","white","borders","none","s","m","middle","indigo","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","onSubmit","e","preventDefault","authOperations","autoComplete","type","onChange"],"sourceRoot":""}